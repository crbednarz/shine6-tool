import click
import time
from Shine6 import commands as cmd
from Shine6.commands import BootMode, FlashMode
from Shine6.extractor import xor_52_bit_apply, V1_02_10_XOR_KEY
from Shine6.keyboard import open_keyboard


VERSION_DATA = [
    0x1a, 0x00, 0x00, 0x00, 0x56, 0x00, 0x31, 0x00, 0x2e, 0x00, 0x30, 0x00, 0x32, 0x00, 0x2e, 0x00, 0x31, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x04, 0x00, 0x80, 0x00, 0x0a, 0x02, 0x01, 0x00, 0x94, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xef, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd9, 0x04, 0x03, 0x02, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xa5, 0x5a, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
]


@click.command()
@click.option('--input', '-i', help='Path to US v1.02.10 firmware file.')
@click.option('--skip-setup', '-s', is_flag=True, help="Skips setting the keyboard to flash mode. Useful if you've made a mistake and need to try again.")
def main(input, skip_setup):
    print("Preparing flash data...")
    with open(input, 'rb') as file:
        contents = bytearray(file.read())
    
    xor_52_bit_apply(contents, V1_02_10_XOR_KEY)

    if not skip_setup:
        print("Putting keyboard into flash mode...")
        with open_keyboard() as keyboard:
            keyboard.send_packets(cmd.boot_into(BootMode.Flashing))
            time.sleep(1)
        
        time.sleep(4)

    print("Writing...")
    with open_keyboard(True) as keyboard:
        keyboard.send_packets(
            cmd.set_flash_mode(FlashMode.Firmware) +
            cmd.flash_data(contents) +
            cmd.set_flash_mode(FlashMode.Version) +
            cmd.flash_data(VERSION_DATA) +
            cmd.boot_into(BootMode.Normal)
        )
        time.sleep(1)
    
    print("Restoring to normal usage...")
    time.sleep(4)

    with open_keyboard() as keyboard:
        keyboard.send_packets(cmd.finalize_flashing())
        time.sleep(1)

    print("Flashing complete!")


if __name__ == '__main__':
    main()